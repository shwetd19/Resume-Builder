[{"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\index.js":"1","C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\App.js":"2","C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Main\\index.jsx":"3","C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Singup\\index.jsx":"4","C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Login\\index.jsx":"5","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\index.js":"6","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\App.js":"7","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Singup\\index.jsx":"8","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Login\\index.jsx":"9","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Desktop2\\Desktop.jsx":"10","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Header\\Header.js":"11","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Body\\Body.js":"12","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Resume\\Resume.js":"13","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Editor\\Editor.js":"14","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\InputControl\\InputControl.js":"15","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Loginbtn\\Btn.jsx":"16","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Main\\temp.jsx":"17","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Main\\index.jsx":"18"},{"size":302,"mtime":1698330440951,"results":"19","hashOfConfig":"20"},{"size":534,"mtime":1698330440904,"results":"21","hashOfConfig":"20"},{"size":411,"mtime":1698330441044,"results":"22","hashOfConfig":"20"},{"size":2349,"mtime":1698330441091,"results":"23","hashOfConfig":"20"},{"size":1874,"mtime":1698330440982,"results":"24","hashOfConfig":"20"},{"size":302,"mtime":1698397021353,"results":"25","hashOfConfig":"26"},{"size":658,"mtime":1698469151730,"results":"27","hashOfConfig":"26"},{"size":2349,"mtime":1698330441091,"results":"28","hashOfConfig":"26"},{"size":1874,"mtime":1698330440982,"results":"29","hashOfConfig":"26"},{"size":230,"mtime":1698469238801,"results":"30","hashOfConfig":"26"},{"size":601,"mtime":1698467046857,"results":"31","hashOfConfig":"26"},{"size":2741,"mtime":1698432740685,"results":"32","hashOfConfig":"26"},{"size":11038,"mtime":1698432740640,"results":"33","hashOfConfig":"26"},{"size":20342,"mtime":1698432740895,"results":"34","hashOfConfig":"26"},{"size":299,"mtime":1698432740572,"results":"35","hashOfConfig":"26"},{"size":297,"mtime":1698432740501,"results":"36","hashOfConfig":"26"},{"size":170,"mtime":1698468844294,"results":"37","hashOfConfig":"26"},{"size":6440,"mtime":1698469101230,"results":"38","hashOfConfig":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a43xd0",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"9hcj33",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\index.js",[],"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\App.js",[],"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Main\\index.jsx",[],"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Singup\\index.jsx",[],"C:\\Users\\shwet\\Downloads\\Login-System\\Login-System\\client\\src\\components\\Login\\index.jsx",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\index.js",[],["83","84"],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\App.js",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Singup\\index.jsx",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Login\\index.jsx",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Desktop2\\Desktop.jsx",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Header\\Header.js",[],["85","86"],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Body\\Body.js",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Resume\\Resume.js",["87","88","89","90","91","92"],"import React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport {\n  AtSign,\n  Calendar,\n  GitHub,\n  Linkedin,\n  MapPin,\n  Paperclip,\n  Phone,\n} from \"react-feather\";\n\nimport styles from \"./Resume.module.css\";\n\nconst Resume = forwardRef((props, ref) => {\n  const information = props.information;\n  const sections = props.sections;\n  const containerRef = useRef();\n\n  const [columns, setColumns] = useState([[], []]);\n  const [source, setSource] = useState(\"\");\n  const [target, seTarget] = useState(\"\");\n\n  const info = {\n    workExp: information[sections.workExp],\n    project: information[sections.project],\n    achievement: information[sections.achievement],\n    education: information[sections.education],\n    basicInfo: information[sections.basicInfo],\n    summary: information[sections.summary],\n    other: information[sections.other],\n  };\n\n  const getFormattedDate = (value) => {\n    if (!value) return \"\";\n    const date = new Date(value);\n\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n\n  const sectionDiv = {\n    [sections.workExp]: (\n      <div\n        key={\"workexp\"}\n        draggable\n        onDragOver={() => seTarget(info.workExp?.id)}\n        onDragEnd={() => setSource(info.workExp?.id)}\n        className={`${styles.section} ${\n          info.workExp?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>{info.workExp.sectionTitle}</div>\n        <div className={styles.content}>\n          {info.workExp?.details?.map((item) => (\n            <div className={styles.item} key={item.title}>\n              {item.title ? (\n                <p className={styles.title}>{item.title}</p>\n              ) : (\n                <span />\n              )}\n              {item.companyName ? (\n                <p className={styles.subTitle}>{item.companyName}</p>\n              ) : (\n                <span />\n              )}\n              {item.certificationLink ? (\n                <a className={styles.link} href={item.certificationLink}>\n                  <Paperclip />\n                  {item.certificationLink}\n                </a>\n              ) : (\n                <span />\n              )}\n              {item.startDate && item.endDate ? (\n                <div className={styles.date}>\n                  <Calendar /> {getFormattedDate(item.startDate)}-\n                  {getFormattedDate(item.endDate)}\n                </div>\n              ) : (\n                <div />\n              )}\n              {item.location ? (\n                <p className={styles.date}>\n                  <MapPin /> Remote\n                </p>\n              ) : (\n                <span />\n              )}\n              {item.points?.length > 0 ? (\n                <ul className={styles.points}>\n                  {item.points?.map((elem, index) => (\n                    <li className={styles.point} key={elem + index}>\n                      {elem}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <span />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    ),\n    [sections.project]: (\n      <div\n        key={\"project\"}\n        draggable\n        onDragOver={() => seTarget(info.project?.id)}\n        onDragEnd={() => setSource(info.project?.id)}\n        className={`${styles.section} ${\n          info.project?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>{info.project.sectionTitle}</div>\n        <div className={styles.content}>\n          {info.project?.details?.map((item) => (\n            <div className={styles.item}>\n              {item.title ? (\n                <p className={styles.title}>{item.title}</p>\n              ) : (\n                <span />\n              )}\n              {item.link ? (\n                <a className={styles.link} href={item.link}>\n                  <Paperclip />\n                  {item.link}\n                </a>\n              ) : (\n                <span />\n              )}\n              {item.github ? (\n                <a className={styles.link} href={item.github}>\n                  <GitHub />\n                  {item.github}\n                </a>\n              ) : (\n                <span />\n              )}\n              {item.overview ? (\n                <p className={styles.overview}>{item.overview} </p>\n              ) : (\n                <span />\n              )}\n              {item.points?.length > 0 ? (\n                <ul className={styles.points}>\n                  {item.points?.map((elem, index) => (\n                    <li className={styles.point} key={elem + index}>\n                      {elem}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <span />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    ),\n    [sections.education]: (\n      <div\n        key={\"education\"}\n        draggable\n        onDragOver={() => seTarget(info.education?.id)}\n        onDragEnd={() => setSource(info.education?.id)}\n        className={`${styles.section} ${\n          info.education?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>\n          {info.education?.sectionTitle}\n        </div>\n        <div className={styles.content}>\n          {info.education?.details?.map((item) => (\n            <div className={styles.item}>\n              {item.title ? (\n                <p className={styles.title}>{item.title}</p>\n              ) : (\n                <span />\n              )}\n              {item.college ? (\n                <p className={styles.subTitle}>{item.college}</p>\n              ) : (\n                <span />\n              )}\n              {item.startDate && item.endDate ? (\n                <div className={styles.date}>\n                  <Calendar /> {getFormattedDate(item.startDate)} -\n                  {getFormattedDate(item.endDate)}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    ),\n    [sections.achievement]: (\n      <div\n        key={\"achievement\"}\n        draggable\n        onDragOver={() => seTarget(info.achievement?.id)}\n        onDragEnd={() => setSource(info.achievement?.id)}\n        className={`${styles.section} ${\n          info.achievement?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>\n          {info.achievement?.sectionTitle}\n        </div>\n        <div className={styles.content}>\n          {info.achievement?.points?.length > 0 ? (\n            <ul className={styles.numbered}>\n              {info.achievement?.points?.map((elem, index) => (\n                <li className={styles.point} key={elem + index}>\n                  {elem}\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <span />\n          )}\n        </div>\n      </div>\n    ),\n    [sections.summary]: (\n      <div\n        key={\"summary\"}\n        draggable\n        onDragOver={() => seTarget(info.summary?.id)}\n        onDragEnd={() => setSource(info.summary?.id)}\n        className={`${styles.section} ${\n          info.summary?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>{info.summary?.sectionTitle}</div>\n        <div className={styles.content}>\n          <p className={styles.overview}>{info.summary?.detail}</p>\n        </div>\n      </div>\n    ),\n    [sections.other]: (\n      <div\n        key={\"other\"}\n        draggable\n        onDragOver={() => seTarget(info.other?.id)}\n        onDragEnd={() => setSource(info.other?.id)}\n        className={`${styles.section} ${\n          info.other?.sectionTitle ? \"\" : styles.hidden\n        }`}\n      >\n        <div className={styles.sectionTitle}>{info.other?.sectionTitle}</div>\n        <div className={styles.content}>\n          <p className={styles.overview}>{info?.other?.detail}</p>\n        </div>\n      </div>\n    ),\n  };\n\n  const swapSourceTarget = (source, target) => {\n    if (!source || !target) return;\n    const tempColumns = [[...columns[0]], [...columns[1]]];\n\n    let sourceRowIndex = tempColumns[0].findIndex((item) => item === source);\n    let sourceColumnIndex = 0;\n    if (sourceRowIndex < 0) {\n      sourceColumnIndex = 1;\n      sourceRowIndex = tempColumns[1].findIndex((item) => item === source);\n    }\n\n    let targetRowIndex = tempColumns[0].findIndex((item) => item === target);\n    let targetColumnIndex = 0;\n    if (targetRowIndex < 0) {\n      targetColumnIndex = 1;\n      targetRowIndex = tempColumns[1].findIndex((item) => item === target);\n    }\n\n    const tempSource = tempColumns[sourceColumnIndex][sourceRowIndex];\n    tempColumns[sourceColumnIndex][sourceRowIndex] =\n      tempColumns[targetColumnIndex][targetRowIndex];\n\n    tempColumns[targetColumnIndex][targetRowIndex] = tempSource;\n\n    setColumns(tempColumns);\n  };\n\n  useEffect(() => {\n    setColumns([\n      [sections.project, sections.education, sections.summary],\n      [sections.workExp, sections.achievement, sections.other],\n    ]);\n  }, []);\n\n  useEffect(() => {\n    swapSourceTarget(source, target);\n  }, [source]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!props.activeColor || !container) return;\n\n    container.style.setProperty(\"--color\", props.activeColor);\n  }, [props.activeColor]);\n\n  return (\n    <div ref={ref}>\n      <div ref={containerRef} className={styles.container}>\n        <div className={styles.header}>\n          <p className={styles.heading}>{info.basicInfo?.detail?.name}</p>\n          <p className={styles.subHeading}>{info.basicInfo?.detail?.title}</p>\n\n          <div className={styles.links}>\n            {info.basicInfo?.detail?.email ? (\n              <a className={styles.link} type=\"email\">\n                <AtSign /> {info.basicInfo?.detail?.email}\n              </a>\n            ) : (\n              <span />\n            )}\n            {info.basicInfo?.detail?.phone ? (\n              <a className={styles.link}>\n                <Phone /> {info.basicInfo?.detail?.phone}\n              </a>\n            ) : (\n              <span />\n            )}\n            {info.basicInfo?.detail?.linkedin ? (\n              <a className={styles.link}>\n                <Linkedin /> {info.basicInfo?.detail?.linkedin}\n              </a>\n            ) : (\n              <span />\n            )}\n            {info.basicInfo?.detail?.github ? (\n              <a className={styles.link}>\n                <GitHub /> {info.basicInfo?.detail?.github}\n              </a>\n            ) : (\n              <span />\n            )}\n          </div>\n        </div>\n\n        <div className={styles.main}>\n          <div className={styles.col1}>\n            {columns[0].map((item) => sectionDiv[item])}\n          </div>\n          <div className={styles.col2}>\n            {columns[1].map((item) => sectionDiv[item])}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default Resume;\n","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Editor\\Editor.js",["93","94","95","96"],"import React, { useEffect, useState } from \"react\";\nimport { X } from \"react-feather\";\n\nimport InputControl from \"../InputControl/InputControl\";\n\nimport styles from \"./Editor.module.css\";\n\nfunction Editor(props) {\n  const sections = props.sections;\n  const information = props.information;\n\n  const [activeSectionKey, setActiveSectionKey] = useState(\n    Object.keys(sections)[0]\n  );\n  const [activeInformation, setActiveInformation] = useState(\n    information[sections[Object.keys(sections)[0]]]\n  );\n  const [activeDetailIndex, setActiveDetailIndex] = useState(0);\n  const [sectionTitle, setSectionTitle] = useState(\n    sections[Object.keys(sections)[0]]\n  );\n  const [values, setValues] = useState({\n    name: activeInformation?.detail?.name || \"\",\n    title: activeInformation?.detail?.title || \"\",\n    linkedin: activeInformation?.detail?.linkedin || \"\",\n    github: activeInformation?.detail?.github || \"\",\n    phone: activeInformation?.detail?.phone || \"\",\n    email: activeInformation?.detail?.email || \"\",\n  });\n\n  const handlePointUpdate = (value, index) => {\n    const tempValues = { ...values };\n    if (!Array.isArray(tempValues.points)) tempValues.points = [];\n    tempValues.points[index] = value;\n    setValues(tempValues);\n  };\n\n  const workExpBody = (\n    <div className={styles.detail}>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Title\"\n          placeholder=\"Enter title eg. Frontend developer\"\n          value={values.title}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, title: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"Company Name\"\n          placeholder=\"Enter company name eg. amazon\"\n          value={values.companyName}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, companyName: event.target.value }))\n          }\n        />\n      </div>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Certificate Link\"\n          placeholder=\"Enter certificate link\"\n          value={values.certificationLink}\n          onChange={(event) =>\n            setValues((prev) => ({\n              ...prev,\n              certificationLink: event.target.value,\n            }))\n          }\n        />\n        <InputControl\n          label=\"Location\"\n          placeholder=\"Enter location eg. Remote\"\n          value={values.location}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, location: event.target.value }))\n          }\n        />\n      </div>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Start Date\"\n          type=\"date\"\n          placeholder=\"Enter start date of work\"\n          value={values.startDate}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, startDate: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"End Date\"\n          type=\"date\"\n          placeholder=\"Enter end date of work\"\n          value={values.endDate}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, endDate: event.target.value }))\n          }\n        />\n      </div>\n\n      <div className={styles.column}>\n        <label>Enter work description</label>\n        <InputControl\n          placeholder=\"Line 1\"\n          value={values.points ? values.points[0] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 0)}\n        />\n        <InputControl\n          placeholder=\"Line 2\"\n          value={values.points ? values.points[1] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 1)}\n        />\n        <InputControl\n          placeholder=\"Line 3\"\n          value={values.points ? values.points[2] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 2)}\n        />\n      </div>\n    </div>\n  );\n  const projectBody = (\n    <div className={styles.detail}>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Title\"\n          value={values.title}\n          placeholder=\"Enter title eg. Chat app\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, title: event.target.value }))\n          }\n        />\n      </div>\n      <InputControl\n        label=\"Overview\"\n        value={values.overview}\n        placeholder=\"Enter basic overview of project\"\n        onChange={(event) =>\n          setValues((prev) => ({ ...prev, overview: event.target.value }))\n        }\n      />\n      <div className={styles.row}>\n        <InputControl\n          label=\"Deployed Link\"\n          value={values.link}\n          placeholder=\"Enter deployed link of project\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, link: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"Github Link\"\n          value={values.github}\n          placeholder=\"Enter github link of project\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, github: event.target.value }))\n          }\n        />\n      </div>\n      <div className={styles.column}>\n        <label>Enter project description</label>\n        <InputControl\n          placeholder=\"Line 1\"\n          value={values.points ? values.points[0] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 0)}\n        />\n        <InputControl\n          placeholder=\"Line 2\"\n          value={values.points ? values.points[1] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 1)}\n        />\n        <InputControl\n          placeholder=\"Line 3\"\n          value={values.points ? values.points[2] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 2)}\n        />\n        <InputControl\n          placeholder=\"Line 4\"\n          value={values.points ? values.points[3] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 3)}\n        />\n      </div>\n    </div>\n  );\n  const educationBody = (\n    <div className={styles.detail}>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Title\"\n          value={values.title}\n          placeholder=\"Enter title eg. B-tech\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, title: event.target.value }))\n          }\n        />\n      </div>\n      <InputControl\n        label=\"College/School Name\"\n        value={values.college}\n        placeholder=\"Enter name of your college/school\"\n        onChange={(event) =>\n          setValues((prev) => ({ ...prev, college: event.target.value }))\n        }\n      />\n      <div className={styles.row}>\n        <InputControl\n          label=\"Start Date\"\n          type=\"date\"\n          placeholder=\"Enter start date of this education\"\n          value={values.startDate}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, startDate: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"End Date\"\n          type=\"date\"\n          placeholder=\"Enter end date of this education\"\n          value={values.endDate}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, endDate: event.target.value }))\n          }\n        />\n      </div>\n    </div>\n  );\n  const basicInfoBody = (\n    <div className={styles.detail}>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Name\"\n          placeholder=\"Enter your full name eg. Aashu\"\n          value={values.name}\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, name: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"Title\"\n          value={values.title}\n          placeholder=\"Enter your title eg. Frontend developer\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, title: event.target.value }))\n          }\n        />\n      </div>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Linkedin Link\"\n          value={values.linkedin}\n          placeholder=\"Enter your linkedin profile link\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, linkedin: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"Github Link\"\n          value={values.github}\n          placeholder=\"Enter your github profile link\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, github: event.target.value }))\n          }\n        />\n      </div>\n      <div className={styles.row}>\n        <InputControl\n          label=\"Email\"\n          value={values.email}\n          placeholder=\"Enter your email\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, email: event.target.value }))\n          }\n        />\n        <InputControl\n          label=\"Enter phone\"\n          value={values.phone}\n          placeholder=\"Enter your phone number\"\n          onChange={(event) =>\n            setValues((prev) => ({ ...prev, phone: event.target.value }))\n          }\n        />\n      </div>\n    </div>\n  );\n  const achievementsBody = (\n    <div className={styles.detail}>\n      <div className={styles.column}>\n        <label>List your achievements</label>\n        <InputControl\n          placeholder=\"Line 1\"\n          value={values.points ? values.points[0] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 0)}\n        />\n        <InputControl\n          placeholder=\"Line 2\"\n          value={values.points ? values.points[1] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 1)}\n        />\n        <InputControl\n          placeholder=\"Line 3\"\n          value={values.points ? values.points[2] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 2)}\n        />\n        <InputControl\n          placeholder=\"Line 4\"\n          value={values.points ? values.points[3] : \"\"}\n          onChange={(event) => handlePointUpdate(event.target.value, 3)}\n        />\n      </div>\n    </div>\n  );\n  const summaryBody = (\n    <div className={styles.detail}>\n      <InputControl\n        label=\"Summary\"\n        value={values.summary}\n        placeholder=\"Enter your objective/summary\"\n        onChange={(event) =>\n          setValues((prev) => ({ ...prev, summary: event.target.value }))\n        }\n      />\n    </div>\n  );\n  const otherBody = (\n    <div className={styles.detail}>\n      <InputControl\n        label=\"Other\"\n        value={values.other}\n        placeholder=\"Enter something\"\n        onChange={(event) =>\n          setValues((prev) => ({ ...prev, other: event.target.value }))\n        }\n      />\n    </div>\n  );\n\n  const generateBody = () => {\n    switch (sections[activeSectionKey]) {\n      case sections.basicInfo:\n        return basicInfoBody;\n      case sections.workExp:\n        return workExpBody;\n      case sections.project:\n        return projectBody;\n      case sections.education:\n        return educationBody;\n      case sections.achievement:\n        return achievementsBody;\n      case sections.summary:\n        return summaryBody;\n      case sections.other:\n        return otherBody;\n      default:\n        return null;\n    }\n  };\n\n  const handleSubmission = () => {\n    switch (sections[activeSectionKey]) {\n      case sections.basicInfo: {\n        const tempDetail = {\n          name: values.name,\n          title: values.title,\n          linkedin: values.linkedin,\n          github: values.github,\n          email: values.email,\n          phone: values.phone,\n        };\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.basicInfo]: {\n            ...prev[sections.basicInfo],\n            detail: tempDetail,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.workExp: {\n        const tempDetail = {\n          certificationLink: values.certificationLink,\n          title: values.title,\n          startDate: values.startDate,\n          endDate: values.endDate,\n          companyName: values.companyName,\n          location: values.location,\n          points: values.points,\n        };\n        const tempDetails = [...information[sections.workExp]?.details];\n        tempDetails[activeDetailIndex] = tempDetail;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.workExp]: {\n            ...prev[sections.workExp],\n            details: tempDetails,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.project: {\n        const tempDetail = {\n          link: values.link,\n          title: values.title,\n          overview: values.overview,\n          github: values.github,\n          points: values.points,\n        };\n        const tempDetails = [...information[sections.project]?.details];\n        tempDetails[activeDetailIndex] = tempDetail;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.project]: {\n            ...prev[sections.project],\n            details: tempDetails,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.education: {\n        const tempDetail = {\n          title: values.title,\n          college: values.college,\n          startDate: values.startDate,\n          endDate: values.endDate,\n        };\n        const tempDetails = [...information[sections.education]?.details];\n        tempDetails[activeDetailIndex] = tempDetail;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.education]: {\n            ...prev[sections.education],\n            details: tempDetails,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.achievement: {\n        const tempPoints = values.points;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.achievement]: {\n            ...prev[sections.achievement],\n            points: tempPoints,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.summary: {\n        const tempDetail = values.summary;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.summary]: {\n            ...prev[sections.summary],\n            detail: tempDetail,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n      case sections.other: {\n        const tempDetail = values.other;\n\n        props.setInformation((prev) => ({\n          ...prev,\n          [sections.other]: {\n            ...prev[sections.other],\n            detail: tempDetail,\n            sectionTitle,\n          },\n        }));\n        break;\n      }\n    }\n  };\n\n  const handleAddNew = () => {\n    const details = activeInformation?.details;\n    if (!details) return;\n    const lastDetail = details.slice(-1)[0];\n    if (!Object.keys(lastDetail).length) return;\n    details?.push({});\n\n    props.setInformation((prev) => ({\n      ...prev,\n      [sections[activeSectionKey]]: {\n        ...information[sections[activeSectionKey]],\n        details: details,\n      },\n    }));\n    setActiveDetailIndex(details?.length - 1);\n  };\n\n  const handleDeleteDetail = (index) => {\n    const details = activeInformation?.details\n      ? [...activeInformation?.details]\n      : \"\";\n    if (!details) return;\n    details.splice(index, 1);\n    props.setInformation((prev) => ({\n      ...prev,\n      [sections[activeSectionKey]]: {\n        ...information[sections[activeSectionKey]],\n        details: details,\n      },\n    }));\n\n    setActiveDetailIndex((prev) => (prev === index ? 0 : prev - 1));\n  };\n\n  useEffect(() => {\n    const activeInfo = information[sections[activeSectionKey]];\n    setActiveInformation(activeInfo);\n    setSectionTitle(sections[activeSectionKey]);\n    setActiveDetailIndex(0);\n    setValues({\n      name: activeInfo?.detail?.name || \"\",\n      overview: activeInfo?.details\n        ? activeInfo.details[0]?.overview || \"\"\n        : \"\",\n      link: activeInfo?.details ? activeInfo.details[0]?.link || \"\" : \"\",\n      certificationLink: activeInfo?.details\n        ? activeInfo.details[0]?.certificationLink || \"\"\n        : \"\",\n      companyName: activeInfo?.details\n        ? activeInfo.details[0]?.companyName || \"\"\n        : \"\",\n      college: activeInfo?.details\n        ? activeInfo.details[0]?.college || \"\"\n        : \"\",\n      location: activeInfo?.details\n        ? activeInfo.details[0]?.location || \"\"\n        : \"\",\n      startDate: activeInfo?.details\n        ? activeInfo.details[0]?.startDate || \"\"\n        : \"\",\n      endDate: activeInfo?.details ? activeInfo.details[0]?.endDate || \"\" : \"\",\n      points: activeInfo?.details\n        ? activeInfo.details[0]?.points\n          ? [...activeInfo.details[0]?.points]\n          : \"\"\n        : activeInfo?.points\n        ? [...activeInfo.points]\n        : \"\",\n      title: activeInfo?.details\n        ? activeInfo.details[0]?.title || \"\"\n        : activeInfo?.detail?.title || \"\",\n      linkedin: activeInfo?.detail?.linkedin || \"\",\n      github: activeInfo?.details\n        ? activeInfo.details[0]?.github || \"\"\n        : activeInfo?.detail?.github || \"\",\n      phone: activeInfo?.detail?.phone || \"\",\n      email: activeInfo?.detail?.email || \"\",\n      summary: typeof activeInfo?.detail !== \"object\" ? activeInfo.detail : \"\",\n      other: typeof activeInfo?.detail !== \"object\" ? activeInfo.detail : \"\",\n    });\n  }, [activeSectionKey]);\n\n  useEffect(() => {\n    setActiveInformation(information[sections[activeSectionKey]]);\n  }, [information]);\n\n  useEffect(() => {\n    const details = activeInformation?.details;\n    if (!details) return;\n\n    const activeInfo = information[sections[activeSectionKey]];\n    setValues({\n      overview: activeInfo.details[activeDetailIndex]?.overview || \"\",\n      link: activeInfo.details[activeDetailIndex]?.link || \"\",\n      certificationLink:\n        activeInfo.details[activeDetailIndex]?.certificationLink || \"\",\n      companyName: activeInfo.details[activeDetailIndex]?.companyName || \"\",\n      location: activeInfo.details[activeDetailIndex]?.location || \"\",\n      startDate: activeInfo.details[activeDetailIndex]?.startDate || \"\",\n      endDate: activeInfo.details[activeDetailIndex]?.endDate || \"\",\n      points: activeInfo.details[activeDetailIndex]?.points || \"\",\n      title: activeInfo.details[activeDetailIndex]?.title || \"\",\n      linkedin: activeInfo.details[activeDetailIndex]?.linkedin || \"\",\n      github: activeInfo.details[activeDetailIndex]?.github || \"\",\n      college: activeInfo.details[activeDetailIndex]?.college || \"\",\n    });\n  }, [activeDetailIndex]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        {Object.keys(sections)?.map((key) => (\n          <div\n            className={`${styles.section} ${\n              activeSectionKey === key ? styles.active : \"\"\n            }`}\n            key={key}\n            onClick={() => setActiveSectionKey(key)}\n          >\n            {sections[key]}\n          </div>\n        ))}\n      </div>\n\n      <div className={styles.body}>\n        <InputControl\n          label=\"Title\"\n          placeholder=\"Enter section title\"\n          value={sectionTitle}\n          onChange={(event) => setSectionTitle(event.target.value)}\n        />\n\n        <div className={styles.chips}>\n          {activeInformation?.details\n            ? activeInformation?.details?.map((item, index) => (\n                <div\n                  className={`${styles.chip} ${\n                    activeDetailIndex === index ? styles.active : \"\"\n                  }`}\n                  key={item.title + index}\n                  onClick={() => setActiveDetailIndex(index)}\n                >\n                  <p>\n                    {sections[activeSectionKey]} {index + 1}\n                  </p>\n                  <X\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      handleDeleteDetail(index);\n                    }}\n                  />\n                </div>\n              ))\n            : \"\"}\n          {activeInformation?.details &&\n          activeInformation?.details?.length > 0 ? (\n            <div className={styles.new} onClick={handleAddNew}>\n              +New\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        {generateBody()}\n\n        <button onClick={handleSubmission}>Save</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Editor;\n","D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\InputControl\\InputControl.js",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Loginbtn\\Btn.jsx",[],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Main\\temp.jsx",["97","98","99","100"],"import \"./styles.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const handleLogout = () => {\n  localStorage.removeItem(\"token\");\n  window.location.reload();\n};\n\n\n",["101","102"],"D:\\WEB-PROJECT\\Resume-Builder\\client\\src\\components\\Main\\index.jsx",["103","104","105"],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import Desktop from '../Desktop2/Desktop';\r\nimport { handleLogout } from \"./temp\";\r\n\r\n\r\nexport default function Index() {\r\n  const navigate = useNavigate();\r\n\r\n  function sayHello() {\r\n    navigate(\"/body\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar bg-white\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-content\">\r\n            <div className=\"brand-and-toggler\">\r\n              <a href=\"index.html\" className=\"navbar-brand\">\r\n                <img\r\n                  src=\"assets/images/curriculum-vitae.png\"\r\n                  alt=\"\"\r\n                  className=\"navbar-brand-icon\" />\r\n                <span className=\"navbar-brand-text\" />\r\n                build <span>resume.</span>\r\n              </a>\r\n              {/* <button type=\"button\" className=\"navbar-toggler-btn\"> */}\r\n              {/* <div className=\"bars\"> */}\r\n              <button className=\"white_btn\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n              {/* </div> */}\r\n              {/* </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <header className=\"header bg-bright\" id=\"header\">\r\n        <div className=\"container\">\r\n          <div className=\"header-content text-center\">\r\n            <h6 className=\"text-uppercase text-blue-dark fs-14 fw-6 ls-1\">\r\n              online resume builder\r\n            </h6>\r\n            <h1 className=\"lg-title\">\r\n              Emerge in the elite 2% with your resume.\r\n            </h1>\r\n            <p className=\"text-dark fs-18\">\r\n              Try free, professional resume templates that meet employers'\r\n              'resume rules' for a quick, easy, and effective solution.\r\n            </p>\r\n            {/* <a href=\"resume.html\" className=\"btn btn-primary text-uppercase\">\r\n              create my resume\r\n            </a> */}\r\n            <div>\r\n              <button\r\n                onClick={sayHello}\r\n                className=\"btn btn-primary text-uppercase\"\r\n                \r\n              >\r\n                Login\r\n              </button> \r\n            </div>\r\n            <img src=\"assets/images/dublin-resume-templates.avif\" />\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"section-one\">\r\n        <div className=\"container\">\r\n          <div className=\"section-one-content\">\r\n            <div className=\"section-one-l\">\r\n              {/* <img src=\"assets/images/visual-0c7080adf17f1f207276f613447c924f667dab34b7ac415cd7ef653172defd0b.svg\" /> */}\r\n              <img src=\"assets/images/hero-bg.png\" />\r\n            </div>\r\n            <div className=\"section-one-r text-center\">\r\n              <h2 className=\"lg-title\">\r\n                Use the best resume maker as your guide!\r\n              </h2>\r\n              <p className=\"text\">\r\n                Getting that dream job can seem like an impossible task. We're\r\n                here to change that. Give yourself a real advantage with the\r\n                best online resume maker: created by experts, imporved by data,\r\n                trusted by millions of professionals.\r\n              </p>\r\n              <div className=\"btn-group\">\r\n                <a\r\n                  href=\"resume.html\"\r\n                  className=\"btn btn-primary text-uppercase\"\r\n                >\r\n                  create my resume\r\n                </a>\r\n                <a href=\"#\" className=\"btn btn-secondary text-uppercase\">\r\n                  watch video\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"section-two bg-bright\">\r\n        <div className=\"container\">\r\n          <div className=\"section-two-content\">\r\n            <div className=\"section-items\">\r\n              <div className=\"section-item\">\r\n                <div className=\"section-item-icon\">\r\n                  <img\r\n                    src=\"assets/images/feature-1-edf4481d69166ac81917d1e40e6597c8d61aa970ad44367ce78049bf830fbda5.svg\"\r\n                    alt=\"\" />\r\n                </div>\r\n                <h5 className=\"section-item-title\">\r\n                  Make a resume that wins interviews!\r\n                </h5>\r\n                <p className=\"text\">\r\n                  Use our resume maker with its advanced creation tools to tell\r\n                  professional story that engages recruiters, hiring managers\r\n                  and even CEOs.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"section-item\">\r\n                <div className=\"section-item-icon\">\r\n                  <img\r\n                    src=\"assets/images/feature-2-a7a471bd973c02a55d1b3f8aff578cd3c9a4c5ac4fc74423d94ecc04aef3492b.svg\"\r\n                    alt=\"\" />\r\n                </div>\r\n                <h5 className=\"section-item-title\">\r\n                  Resume writing made easy!\r\n                </h5>\r\n                <p className=\"text\">\r\n                  Resume writing has never been this effortless. Pre-generated\r\n                  text, visual designs and more - all already integrated into\r\n                  the resume maker. Just fill in your details.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"section-item\">\r\n                <div className=\"section-item-icon\">\r\n                  <img\r\n                    src=\"assets/images/feature-3-4e87a82f83e260488c36f8105e26f439fdc3ee5009372bb5e12d9421f32eabdd.svg\"\r\n                    alt=\"\" />\r\n                </div>\r\n                <h5 className=\"section-item-title\">\r\n                  A recruiter-tested CV maker tool\r\n                </h5>\r\n                <p className=\"text\">\r\n                  Our resume builder and its pre-generated content are tested by\r\n                  recruiters and IT experts. We help your CV become truly\r\n                  competitive in the hiring process.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"footer bg-dark\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-content text-center\">\r\n            <p className=\"fs-15\">\r\n              &copy;Copyright 2022. All Rights Reserved -{\" \"}\r\n              <span>Shwetas Dhake</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":293,"column":6,"nodeType":"116","endLine":293,"endColumn":8,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":297,"column":6,"nodeType":"116","endLine":297,"endColumn":14,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":315,"column":15,"nodeType":"122","endLine":315,"endColumn":55},{"ruleId":"120","severity":1,"message":"121","line":322,"column":15,"nodeType":"122","endLine":322,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":329,"column":15,"nodeType":"122","endLine":329,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":336,"column":15,"nodeType":"122","endLine":336,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":357,"column":5,"nodeType":"125","messageId":"126","endLine":481,"endColumn":6},{"ruleId":"114","severity":1,"message":"127","line":564,"column":6,"nodeType":"116","endLine":564,"endColumn":24,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"129","line":568,"column":6,"nodeType":"116","endLine":568,"endColumn":19,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"131","line":590,"column":6,"nodeType":"116","endLine":590,"endColumn":25,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":70,"column":13,"nodeType":"122","endLine":70,"endColumn":69},{"ruleId":"137","severity":1,"message":"138","line":80,"column":15,"nodeType":"122","endLine":80,"endColumn":54},{"ruleId":"120","severity":1,"message":"139","line":99,"column":17,"nodeType":"122","endLine":99,"endColumn":74},{"ruleId":"108","replacedBy":"140"},{"ruleId":"110","replacedBy":"141"},{"ruleId":"137","severity":1,"message":"138","line":65,"column":13,"nodeType":"122","endLine":65,"endColumn":69},{"ruleId":"137","severity":1,"message":"138","line":75,"column":15,"nodeType":"122","endLine":75,"endColumn":54},{"ruleId":"120","severity":1,"message":"139","line":94,"column":17,"nodeType":"122","endLine":94,"endColumn":74},{"ruleId":"108","replacedBy":"142"},{"ruleId":"110","replacedBy":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sections.achievement', 'sections.education', 'sections.other', 'sections.project', 'sections.summary', and 'sections.workExp'. Either include them or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has missing dependencies: 'swapSourceTarget' and 'target'. Either include them or remove the dependency array.",["147"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'information' and 'sections'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has missing dependencies: 'activeSectionKey' and 'sections'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setActiveInformation' needs the current value of 'activeSectionKey'.",["149"],"React Hook useEffect has missing dependencies: 'activeInformation?.details', 'activeSectionKey', 'information', and 'sections'. Either include them or remove the dependency array.",["150"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["144"],["145"],["144"],["145"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [sections.achievement, sections.education, sections.other, sections.project, sections.summary, sections.workExp]",{"range":"160","text":"161"},"Update the dependencies array to be: [source, swapSourceTarget, target]",{"range":"162","text":"163"},"Update the dependencies array to be: [activeSectionKey, information, sections]",{"range":"164","text":"165"},{"range":"166","text":"165"},"Update the dependencies array to be: [activeDetailIndex, activeInformation?.details, activeSectionKey, information, sections]",{"range":"167","text":"168"},[9139,9141],"[sections.achievement, sections.education, sections.other, sections.project, sections.summary, sections.workExp]",[9208,9216],"[source, swapSourceTarget, target]",[17288,17306],"[activeSectionKey, information, sections]",[17402,17415],[18467,18486],"[activeDetailIndex, activeInformation?.details, activeSectionKey, information, sections]"]